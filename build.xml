<project name="compatibility-tests" xmlns:artifact="antlib:org.apache.maven.artifact.ant">

  <path id="maven-ant-tasks.classpath" path="${basedir}/boot-lib/maven-ant-tasks-2.1.1.jar"/>
  <typedef resource="org/apache/maven/artifact/ant/antlib.xml"
           uri="antlib:org.apache.maven.artifact.ant"
           classpathref="maven-ant-tasks.classpath"/>

  <property name="dev.version" value="1.3-SNAPSHOT"/>

  <target name="clean" depends="init">
    <delete dir="${build.dir}"/>
    <delete dir="${lib.dir}"/>
  </target>

  <target name="init">
    <fail unless="neo4j.version" message="Neo4j version not set: neo4j.version"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="src.effective.dir" value="${build.dir}/src"/>
    <property name="src.dir" value="${basedir}/src"/>

    <condition property="src.version" value="${neo4j.version}" else="default">
      <available file="${src.dir}/versions/${neo4j.version}" type="dir"/>
    </condition>
    <property name="src.framework.dir" value="${src.dir}/framework"/>
    <property name="src.default.dir" value="${src.dir}/versions/default"/>
    <property name="src.version.dir" value="${src.dir}/versions/${src.version}"/>
    <property name="db.versions.top.dir" value="${build.dir}/db"/>
    <property name="db.version.dir" value="${db.versions.top.dir}/${neo4j.version}"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="repo.dir" value="repo"/>
    <mkdir dir="${repo.dir}"/>

    <path id="classpath">
      <fileset dir="${lib.dir}">
        <include name="**/*.jar"/>
      </fileset>
      <pathelement path="${classes.dir}"/>
    </path>

    <echo message="Using framework src dir: ${src.framework.dir}"/>
    <echo message="Using version src dir: ${src.version.dir}"/>
  </target>

  <target name="retrieve-dependencies">
    <artifact:dependencies filesetid="mvn.libs" sourcesfilesetid="mvn.sources">
      <remoterepository id="neo4j" url="http://m2.neo4j.org/snapshots"/>
      <remoterepository id="sonatype" url="https://oss.sonatype.org/content/repositories/releases"/>
      <remoterepository id="maven-central" url="http://repo1.maven.org/maven2"/>
      <remoterepository id="jboss" url="http://repository.jboss.org/maven2"/>
      <remoterepository id="jboss-brew" url="http://repository.jboss.org/maven2-brew"/>
      <dependency groupId="org.neo4j" type="pom" artifactId="neo4j" version="${neo4j.version}" scope="compile"/>
      <dependency groupId="junit" artifactId="junit" version="4.8.1" scope="compile"/>
    </artifact:dependencies>
    <copy todir="${lib.dir}">
      <fileset refid="mvn.libs"/>
    </copy>
    <copy todir="${lib.dir}">
      <fileset refid="mvn.sources"/>
    </copy>
  </target>

  <target name="compile-framework">
    <mkdir dir="${classes.dir}"/>
    <javac debug="true" classpathref="classpath" srcdir="${src.framework.dir}" destdir="${classes.dir}"/>
  </target>

  <target name="check-should-copy-default">
    <condition property="should.copy.default">
      <not>
        <available file="${src.version.dir}/no-default" />
      </not>
    </condition>
  </target>

  <target name="compile-default" depends="check-should-copy-default" if="should.copy.default">
    <copy todir="${src.effective.dir}">
      <fileset dir="${src.default.dir}" includes="**/*"/>
    </copy>
  </target>

  <target name="compile-version" depends="compile-default">
    <copy todir="${src.effective.dir}" overwrite="true">
      <fileset dir="${src.version.dir}" includes="**/*"/>
    </copy>
    <javac debug="true" classpathref="classpath" srcdir="${src.effective.dir}" destdir="${classes.dir}"/>
    <copy todir="${classes.dir}">
      <fileset dir="${src.framework.dir}">
        <include name="**/*"/>
      </fileset>
      <fileset dir="${src.effective.dir}">
        <include name="**/*"/>
      </fileset>
    </copy>
  </target>

  <target name="compile" depends="init,compile-framework,compile-version">
  </target>


  <!-- Dev -->

  <target name="dev-setup">
    <property name="neo4j.version" value="${dev.version}"/>
    <property name="lib.dir" value="${basedir}/dev-lib"/>
    <delete dir="${lib.dir}"/>
  </target>

  <target name="retrieve-dev-dependencies" depends="dev-setup,init,retrieve-dependencies"
          description="Retrieves the dependencies based on the dev.version property.">

    <copy todir="${lib.dir}" flatten="true">
      <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </copy>
  </target>


  <!-- Generate -->

  <target name="generate-test-graph" depends="init,clean,retrieve-dependencies,compile">
    <mkdir dir="${db.version.dir}"/>
    <java classpathref="classpath" classname="org.neo4j.compatibility.Generate" failonerror="true">
      <sysproperty key="version.dir" value="${db.version.dir}"/>
    </java>
    <property name="version.zip.file" value="${build.dir}/db-${neo4j.version}.zip"/>
    <zip destfile="${version.zip.file}">
      <zipfileset prefix="${neo4j.version}" dir="${db.version.dir}"/>
    </zip>
    <copy file="${version.zip.file}" todir="${repo.dir}"/>
  </target>


  <!-- Verify -->

  <target name="unpack-stores">
    <unzip dest="${db.versions.top.dir}">
      <fileset dir="${repo.dir}" includes="*.zip"/>
    </unzip>
  </target>

  <target name="verify-build" depends="init,clean,retrieve-dependencies,compile,unpack-stores">
    <dirset id="versions.csv" dir="${db.versions.top.dir}" includes="*"/>
    <pathconvert dirsep="/" pathsep="," property="versions.csv" refid="versions.csv"/>
    <java classpathref="classpath" classname="org.neo4j.compatibility.Verify" failonerror="true">
      <permissions>
        <grant class="java.security.AllPermission"/>
      </permissions>
      <sysproperty key="versions.csv" value="${versions.csv}"/>
    </java>
  </target>

</project>