<project name="compatibility-tests" xmlns:ivy="antlib:org.apache.ivy.ant">

  <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant">
    <classpath>
      <fileset dir="/Users/david/dev/resources/libs/ivy/apache-ivy-2.2.0-rc1" includes="*.jar"/>
    </classpath>
  </taskdef>

  <target name="clean" depends="init">
    <delete dir="${build.dir}"/>
    <delete dir="${lib.dir}"/>
  </target>

  <target name="init">
    <property name="neo4j.version" value="1.3.M01"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="versions.top.dir" value="${build.dir}/db"/>
    <property name="version.dir" value="${versions.top.dir}/${neo4j.version}"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="ivy.retrieve.pattern" value="${lib.dir}/[module]-[artifact]-[revision]-[conf].[ext]"/>
    <property name="ivy.retrieve.storepattern" value="${versions.top.dir}/[artifact].[ext]"/>
    <property name="ivy.file" value="${basedir}/neo4j-ivy.xml"/>
    <property name="repo.dir" value="repo"/>
    <mkdir dir="${repo.dir}"/>
    <ivy:configure file="${basedir}/ivysettings.xml"/>

    <path id="classpath">
      <fileset dir="${lib.dir}">
        <include name="**/*.jar"/>
      </fileset>
      <pathelement path="${classes.dir}"/>
    </path>

  </target>

  <target name="resolve-dependencies" depends="init">
    <ivy:resolve file="${ivy.file}" haltonfailure="false" failureproperty="ivy.resolve.failed" conf="default"/>
    <ivy:report todir="${build.dir}/ivy-report"/>
    <fail if="ivy.resolve.failed"/>
  </target>

  <target name="retrieve-dependencies" depends="resolve-dependencies">
    <ivy:retrieve file="${ivy.file}" pattern="${ivy.retrieve.pattern}" conf="default"/>
  </target>

  <target name="compile" depends="init">
    <mkdir dir="${classes.dir}"/>
    <javac classpathref="classpath" srcdir="${src.dir}" destdir="${classes.dir}"/>
    <copy todir="${classes.dir}">
      <fileset dir="${src.dir}">
        <include name="**/*" />
        <exclude name="**/*.java" />
      </fileset>
    </copy>
  </target>


  <!-- Dev -->

  <target name="dev-setup">
    <property name="neo4j.version" value="1.3.M01"/>
    <property name="lib.dir" value="${basedir}/dev-lib"/>
  </target>

  <target name="retrieve-dev-dependencies" depends="dev-setup,init,retrieve-dependencies"/>


  <!-- Generate -->

  <target name="generate-test-graph" depends="init,clean,retrieve-dependencies,compile">
    <java classpathref="classpath" classname="org.neo4j.compatibility.Generate" failonerror="true">
      <sysproperty key="version.dir" value="${version.dir}"/>
    </java>
    <property name="version.zip.file" value="${build.dir}/db-${neo4j.version}.zip"/>
    <zip destfile="${version.zip.file}">
      <zipfileset prefix="${neo4j.version}" dir="${version.dir}"/>
    </zip>
    <copy file="${version.zip.file}" todir="${repo.dir}"/>
  </target>


  <!-- Verify -->

  <target name="unpack-stores">
    <unzip dest="${versions.top.dir}">
      <fileset dir="${repo.dir}" includes="*.zip"/>
    </unzip>
  </target>

  <target name="verify-build" depends="init,clean,retrieve-dependencies,compile,unpack-stores">
    <dirset id="versions.csv" dir="${versions.top.dir}" includes="*"/>
    <pathconvert dirsep="/" pathsep="," property="versions.csv" refid="versions.csv" />
    <java classpathref="classpath" classname="org.neo4j.compatibility.Verify" failonerror="true">
      <sysproperty key="versions.csv" value="${versions.csv}"/>
    </java>
  </target>

</project>